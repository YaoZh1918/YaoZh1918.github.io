<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[YaoZh1918]]></title>
  <link href="http://yaozh1918.github.io/atom.xml" rel="self"/>
  <link href="http://yaozh1918.github.io/"/>
  <updated>2016-10-28T15:48:02+08:00</updated>
  <id>http://yaozh1918.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu上安装Transmission Web界面]]></title>
    <link href="http://yaozh1918.github.io/14785830863216.html"/>
    <updated>2016-11-08T13:31:26+08:00</updated>
    <id>http://yaozh1918.github.io/14785830863216.html</id>
    <content type="html"><![CDATA[
<p>考虑到实验室的电脑放着也是浪费，打算装个BT客户端下点种子，同时还可以为我的PT加点流量。但是，实验室的电脑一般就放置在那里，不想动它，最好有个可以远程操控的客户端，经过一番搜寻，打算用Transmission加web界面来实现。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">Install</h2>

<p>首先安装Transmission，Ubuntu的repo里已经有Transmission了，如果想要最新版本也可以添加PPA：</p>

<pre><code>sudo add-apt-repository ppa:transmissionbt/ppa
sudo apt-get update
</code></pre>

<p>之后安装：</p>

<pre><code>sudo apt-get install transmission-cli transmission-common transmission-daemon
</code></pre>

<h2 id="toc_1">Configure</h2>

<p>安装好以后其实已经可以用了，在本地上访问<code>localhost:9091</code>，默认用户名密码都是<code>transmission</code>，但因为白名单的缘故，远程无法访问。为此，我们需要修改位于<code>/var/lib/transmission-daemon/info/settings.json</code>的配置文件。在此之前，记得先停止daemon：</p>

<pre><code>sudo service transmission-daemon stop
</code></pre>

<p>那么在配置文件中，有哪些需要修改呢？<br/>
首先添加白名单并修改账号密码，例如：</p>

<pre><code>&quot;rpc-password&quot;: &quot;password&quot;,
&quot;rpc-username&quot;: &quot;user&quot;,
&quot;rpc-whitelist&quot;: &quot;127.0.0.1,192.168.*.*&quot;,
</code></pre>

<p>注意，默认的密码是SHA1加密后的，我们在修改的时候无需手动加密，直接改就好了，之后重启daemon会自动进行加密。</p>

<p>然后还要修改<code>umask</code>参数，以保证Transmission创建的文件其他用户也可以访问：</p>

<pre><code>&quot;umask&quot;: 2,
</code></pre>

<p>都修改好之后，重启daemon：</p>

<pre><code>sudo service transmission-daemon start
</code></pre>

<p>现在，远程用户（白名单中）可以访问<code>http://server-ip:9091</code>来控制Transmission了。</p>

<h2 id="toc_2">自定义下载位置</h2>

<p>默认的下载位置在<code>/var/lib/transmission-daemon/downloads/</code>，有那么一丝丝不方便，可能需要修改到我们当前用户的<code>Downloads</code>目录下，这一小节就介绍下如何修改下载位置。</p>

<p>首先，出于安全因素，Transmission有自己的一个用户，而现在我们需要让Transmission将文件下载至当前用户的目录下，那么首先需要将当前用户加至组里（假设当前用户叫user）：</p>

<pre><code>sudo usermod -a -G debian-transmission user
</code></pre>

<p>然后我们在当前用户的下载目录中新建一些文件夹，并修改权限：</p>

<pre><code>cd /home/user/Downloads
mkdir transmission
cd transmission
mkdir completed incomplete torrents

sudo chgrp -R debian-transmission /home/user/Downloads/transmission
sudo chmod -R 775 /home/user/Downloads/transmission
</code></pre>

<p>最后修改<code>settings.json</code>:</p>

<pre><code>&quot;download-dir&quot;: &quot;/home/user/Downloads/transmission/completed&quot;,
&quot;incomplete-dir&quot;: &quot;/home/user/Downloads/transmission/incomplete&quot;,
&quot;incomplete-dir-enabled&quot;: true,
&quot;watch-dir&quot;: &quot;/home/user/Downloads/transmission/torrents&quot;,
&quot;watch-dir-enabled&quot;: true
</code></pre>

<p>这样，下载中的文件都会在incomplete中，下载好的在completed中，将种子移至torrents文件夹就会自动开始下载。</p>

<p>收工！</p>

<h2 id="toc_3">Reference</h2>

<p>本文主要参考了以下两篇文章：<br/>
<a href="https://help.ubuntu.com/community/TransmissionHowTo">TransmissionHowTo</a><br/>
<a href="http://www.htpcbeginner.com/install-transmission-web-interface-on-ubuntu-1204/">Install Transmission with web interface on Ubuntu</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[设置Server开机启动ssh服务]]></title>
    <link href="http://yaozh1918.github.io/14776396449421.html"/>
    <updated>2016-10-28T15:27:24+08:00</updated>
    <id>http://yaozh1918.github.io/14776396449421.html</id>
    <content type="html"><![CDATA[
<p>为了能够远程访问server，肯定需要通过ssh，但有时候服务器需要重启，而ssh server是在login后才启动的，也就是说我们需要坐在电脑前，手动登陆一次才能继续使用ssh。今天搜了一下，发现一个简单有效的<a href="http://askubuntu.com/questions/3913/start-ssh-server-on-boot">解决方案</a>。</p>

<span id="more"></span><!-- more -->

<p>其实核心就一条命令，这条命令的作用是设置ssh server在default runlevels时启动。</p>

<pre><code>sudo update-rc.d ssh defaults
</code></pre>

<p>但是此时，我们在图形界面下的Network Manager中修改的如ip地址，网关等是不会生效的。我们要在<code>/etc/network/interfaces</code>添加我们的设置。</p>

<pre><code>auto lo
iface lo inet loopback

auto enp4s0
iface enp4s0 inet static
address 111.111.111.111
netmask 255.255.254.0
gateway 111.111.111.1
dns-nameserver 8.8.8.8
</code></pre>

<p>具体的设置可以参考<a href="http://www.cyberciti.biz/faq/setting-up-an-network-interfaces-file/">这里</a>。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[构建一个可复用的Python实验环境(1)]]></title>
    <link href="http://yaozh1918.github.io/14770379590045.html"/>
    <updated>2016-10-21T16:19:19+08:00</updated>
    <id>http://yaozh1918.github.io/14770379590045.html</id>
    <content type="html"><![CDATA[
<p>毕竟是野路子出身，以前跑实验，总是每一个模型都有一套完整的代码，从读数据，跑模型，算得分，写代码的过程中也是大量复制粘贴，因为读数据和算得分的代码通常都是通用的。<br/>
这次访学，师兄拷给我一份实验环境的代码，看后惊叹原来代码要这样写，耦合解得非常好。但我这种强迫症总是觉得别人写的不漂亮，自己照着重写了一遍，结果并没能领悟其精髓，结果最后跑实验的时候各种出问题。项目好不容易结束，决定认认真真分析一下代码，再重新写一遍。代码在github上同步更新。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">目标</h2>

<p>我们的目标是写一个可复用的实验环境框架，这样拿到一个新的项目，只要对应的填入一些函数、类，就可以使用了。<br/>
那么这个实验环境要有怎样的特性呢？我们希望，在项目进行过程中，如果要添加一个数据集、模型、或是评估指标，只要简单的加入对应的文件就好，而不去影响其他代代码。<br/>
这样的一个环境搭好之后，就可以把它当成一个库来使用，编写额外的代码来调用其中的函数。</p>

<h2 id="toc_1">整体结构</h2>

<p>通常来说，一个完整的实验的流程是读取数据、用模型计算结果、对结果进行评估（打分），那么至少就要有三个基类：<code>dataset</code>,<code>model</code>,<code>metric</code>。此外，我们可能有不同的实验设置，例如80%拿来训练模型，20%作为测试集，这样还需要一个基类<code>setting</code>。最后我们再用一个<code>profile</code>类来把这些东西组装起来就好了。整体的结构就可以这样写：</p>

<pre><code>+explib
|-- +datasets
|-- +models
|-- +metrics
|-- +settings
|-- __init__.py
|-- base.py
|-- utils.py
</code></pre>

<p>我们将基类都定义在<code>base.py</code>中，<code>utils.py</code>放一些常用的小函数，例如io操作等。模型等具体实现写在对应的文件夹下。</p>

<h2 id="toc_2">基类定义</h2>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cliclick: some basic usages]]></title>
    <link href="http://yaozh1918.github.io/14679024129375.html"/>
    <updated>2016-07-07T22:40:12+08:00</updated>
    <id>http://yaozh1918.github.io/14679024129375.html</id>
    <content type="html"><![CDATA[
<p><code>cliclick</code> is a small tool that allows you to do mouse click and keyboard stroke in command lines. This article will illustrate the basic usages of this tool. For more information, you could visit its <a href="http://www.bluem.net/en/mac/cliclick/">homepage</a>.</p>

<span id="more"></span><!-- more -->

<p>Actually, there have been very detailed descriptions in <code>cliclick -h</code>, so I just want to show some simple examples here.</p>

<h2 id="toc_0">Mouse related actions</h2>

<p>The mouse-related actions share a common format:</p>

<pre><code>command:x,y
</code></pre>

<p><strong><code>cliclick</code> only can emulate left click, but you can use keyboard related action to realize a right click(in OS X, <code>control</code>+left click = right click), which will be described below.</strong></p>

<h3 id="toc_1">Click</h3>

<p>Commands that stimulate clicks include:</p>

<ul>
<li><code>c</code>: click</li>
<li><code>dc</code>: double click</li>
<li><code>tc</code>: triple click</li>
</ul>

<h3 id="toc_2">Drag</h3>

<p>If you want to emulate drag actions, you need a pair of actions:</p>

<ul>
<li><code>dd</code>: press down </li>
<li><code>du</code>: release </li>
</ul>

<h3 id="toc_3">Move</h3>

<p>You could move your mouse cursor to a given position by <code>m</code> command.</p>

<h3 id="toc_4">Coordinates</h3>

<p>Coordinates have 3 formats:</p>

<ul>
<li><code>.</code>: a single point represents current position.</li>
<li><code>x,y</code>: a pair of numbers represents absolute coordinates.</li>
<li><code>+x,-y</code>: a pair of numbers with plus/minus sign represents relative coordinates.</li>
</ul>

<h2 id="toc_5">Keyboard related actions</h2>

<h3 id="toc_6">Keep pressing</h3>

<p>You may want to use some shortcuts that need keep some keys down, then you will need these two commands:</p>

<ul>
<li><code>kd:keys</code>: keep keys down</li>
<li><code>ku:keys</code>: release keys</li>
</ul>

<p>Available keys are <code>alt</code>, <code>cmd</code>, <code>ctrl</code>, <code>fn</code>, <code>shift</code>. You could keep pressing multiple keys simultaneously, and multiple keys should be separated by &#39;,&#39;.</p>

<h3 id="toc_7">Simple press</h3>

<p><code>kp:key</code> would emulate a simple key press. Most functional keys are available, such as <code>space</code>, <code>return</code>, <code>f1</code>, <code>brightness-up</code>, etc., but basic keys(a,b,c...) are not supported!!!!(Maybe it&#39;s just my ignorance. If anyone found how to do this, please let me know!)</p>

<h3 id="toc_8">Type given text</h3>

<p><code>t:text</code> will stimulate keyboard inputs. If the given text contains space, surrounded <code>&#39;&#39;</code> are needed. Sometimes <code>t:(a single character)</code> can emulate press a certain key(see below example), but sometimes it fails.</p>

<h2 id="toc_9">Other actions</h2>

<h3 id="toc_10">Get current cursor coordinate</h3>

<p><code>p:str</code> will print the given string. For example, <code>p:hello</code> and <code>p:&#39;hello world&#39;</code>. Furthermore, <code>p</code> and <code>p:.</code> will print current cursor coordinate.</p>

<p>Another easier way to get coordinate is using screenshot shortcut: <code>shift+cmd+4</code>.</p>

<h3 id="toc_11">Get color at given coordinate</h3>

<p><code>cp:x,y</code> will print the RGB value at given coordinate.</p>

<h3 id="toc_12">Wait</h3>

<p><code>w:ms</code> will wait for the given number of millisecond.</p>

<h2 id="toc_13">Examples</h2>

<h3 id="toc_14">Get a 200x200 pixel screenshot centered in current cursor position</h3>

<pre><code>cliclick kd:shift,cmd t:4 w:100 dd:-100,-100 w:100 du:+200,+200 w:100 ku:shift,cmd
</code></pre>

<p><code>w:100</code> gives computer enough time to response.</p>

<p>An alternative way is save following content in a file, then use <code>cliclick -f filename</code>.</p>

<pre><code># each line contains a single event
# hash character # represents comments 
kd:shift,cmd 
t:4 
w:100 
dd:-100,-100 
w:100 
du:+200,+200 
w:100 
ku:shift,cmd
</code></pre>

<h3 id="toc_15">Copy text in System Information</h3>

<p>(This example is inspired by <a href="https://tinyapps.org/blog/mac/201212210700_automate_clicks_os_x.html">this</a>.)</p>

<p>Save following content in a file, then use <code>cliclick -f filename -w 200</code>. <code>-w 200</code> means there will be a 200-millisecond pause after every event.</p>

<pre><code># click left-upper conner apple icon
c:25,10
# hold option to change menu items
kd:alt
# move to first item
m:+0,+25
# click current position(you can combine these two events using c:+0,+15 directly
c:.
# release option
ku:alt
# open an application might be slow, so you need add some extra pause time
w:1000
# select the text
dd:420,115
du:840,330
# hold control
kd:ctrl
# this time, c will perform a right click
c:-100,-100
# release control
ku:ctrl
# click copy item
c:+20,+80
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu安装Nvidia驱动及tensorflow]]></title>
    <link href="http://yaozh1918.github.io/14652179403403.html"/>
    <updated>2016-06-06T20:59:00+08:00</updated>
    <id>http://yaozh1918.github.io/14652179403403.html</id>
    <content type="html"><![CDATA[
<p>刚刚搞了台新机器，带的GTX960显卡，想装个ubuntu跑deep learning，在安装中遇到了一些问题，这里记录一下。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">安装Ubuntu</h2>

<p>用u盘安装<code>64bit 14.04LTS</code>，不知道是不是显示器的原因，960没有vga的口，所以用了个vga转dvi的转接头，导致安装引导一进图形界面显示器就黑屏，显示分辨率超出范围。</p>

<p>因此安装的时候要稍作处理，u盘一进引导就按<code>F1</code>，进入下图的这个界面，然后选择第一个试用或者第二个安装，按<code>F6</code>，可以看到一个参数<code>nomodeset</code>，回车选中，然后再回车开始。然而这个方法对我的电脑不管用，换用第二种方法，按<code>Tab</code>，在启动参数末尾删除<code>--</code>，再加上<code>nomodeset</code>，回车安装，此时分辨率会调整为<code>640x480</code>。</p>

<p><img src="http://o6jlkx4pl.bkt.clouddn.com/2016-06-06-IMG_1360%20copy.jpg" alt="IMG_1360 copy " class="mw_img_center" style="display: block; clear:both; margin: 0 auto;"/></p>

<p>系统装好后，应该还是进不去的，也要调为<code>nomodest</code>，或者简单一点，Grub时选择<code>Advanced-recovery mode-resume</code>。进系统安装nvidia驱动后应该就可以了。</p>

<h2 id="toc_1">安装Nvidia驱动</h2>

<p>安装nvidia驱动尝试了好久才装上去，一开始我是从官网上下载的驱动，安装没问题，但分辨率就被锁在<code>640x480</code>了，折腾了半天，后来发现了一个很方便的安装方法。</p>

<p>打开<code>Additional Drivers</code>，然后直接选中驱动，apply，重启即可。</p>

<p><img src="http://o6jlkx4pl.bkt.clouddn.com/2016-06-06-Screenshot%20from%202016-06-06%2019_30_39.png" alt="Additional Drivers " class="mw_img_center" style="display: block; clear:both; margin: 0 auto;"/></p>

<h2 id="toc_2">安装python</h2>

<p>图省事，我选择了直接安装<a href="https://www.continuum.io/downloads">Anaconda</a>，下载好<code>.sh</code>文件，我用的是2.7的版本，然后terminal执行：</p>

<pre><code>bash ~/Downloads/Anaconda2-4.0.0-Linux-x86_64.sh
</code></pre>

<p>根据提示完成安装。</p>

<p>完成后最好<code>source ~/.bashrc</code>一下。</p>

<h2 id="toc_3">安装Cuda</h2>

<p>首先从nvidia官网上下载<a href="https://developer.nvidia.com/cuda-downloads">Cuda Toolkit</a>和<a href="https://developer.nvidia.com/cudnn">cudnn</a>，其中cuDNN需要注册一个账号。</p>

<p>先安装cuda，我下载的是<code>deb</code>文件，然后安装：</p>

<pre><code>sudo dpkg -i cuda-repo-ubuntu1404-7-5-local_7.5-18_amd64.deb
sudo apt-get update
sudo apt-get install cuda
</code></pre>

<p>现在安装cudnn，按照tensorflow官网提示，安装v5要从源码安装tensorflow才行，懒得搞，直接下载v4版本的。然后复制文件到cuda的目录：</p>

<pre><code>tar xvzf cudnn-7.0-linux-x64-v4.0-prod.tgz
sudo cp cuda/include/* /usr/local/cuda/include
sudo cp cuda/lib64/* /usr/local/cuda/lib64
sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*
</code></pre>

<p>然后在<code>~/.bash_profile</code>中加入：</p>

<pre><code>export LD_LIBRARY_PATH=&quot;$LD_LIBRARY_PATH:/usr/local/cuda/lib64&quot;
export CUDA_HOME=/usr/local/cuda
</code></pre>

<p>最后再更新一下：<code>source .bash_profile</code>。</p>

<h2 id="toc_4">安装Tensorflow</h2>

<p>准备工作都已搞定，最后安装tensorflow即可，官网给出了anaconda环境的<a href="https://www.tensorflow.org/versions/r0.8/get_started/os_setup.html#anaconda-environment-installation">安装方法</a>，但我想把tensorflow安装到全局，而不是一个环境中，所以直接用pip安装即可。</p>

<p>（下午第一次装的时候还是0.8的教程，晚上写这篇文章的时候就更新到了0.9...）</p>

<p>找到gpu版本的地址：</p>

<pre><code>$ export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0rc0-cp27-none-linux_x86_64.whl
</code></pre>

<p>然后用<code>pip</code>安装，注意我们要用anaconda中的pip：</p>

<pre><code>$ sudo ~/anaconda2/bin/pip install --ignore-installed --upgrade $TF_BINARY_URL
</code></pre>

<p>其中，<code>--ignore-installed</code>是因为<code>easy_install</code>会报错。</p>

<h2 id="toc_5">Test</h2>

<p>至此，已全部安装好了！让我们来测试一下！</p>

<pre><code>python -c &#39;import tensorflow&#39;
</code></pre>

<p>看到全是successfully opened...就可以了！</p>

<p>也可以跑个cnn试一下：</p>

<pre><code>python -m tensorflow.models.image.mnist.convolutional
</code></pre>

<p>gpu就是快啊，我的rmbp每步是要290ms左右，现在只要12ms，不说了，跑cnn去了XD</p>

<h2 id="toc_6">Error</h2>

<p>2016-6-22更新：</p>

<p>有段时间没用，突然出现了这样的问题：</p>

<pre><code>libcudart.so.7.5: cannot open shared object file: No such file or directory
</code></pre>

<p>解决方案：</p>

<pre><code>sudo ldconfig /usr/local/cuda/lib64
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB安装及pymongo入门]]></title>
    <link href="http://yaozh1918.github.io/14641625300131.html"/>
    <updated>2016-05-25T15:48:50+08:00</updated>
    <id>http://yaozh1918.github.io/14641625300131.html</id>
    <content type="html"><![CDATA[
<p>在自己的ubuntu上装MongoDB时遇到了一些问题，装好也不太会用，写篇文章记录下吧！</p>

<span id="more"></span><!-- more -->

<ul>
<li>
<a href="#toc_0">安装</a>
</li>
<li>
<a href="#toc_1">启动/停止服务</a>
</li>
<li>
<a href="#toc_2">PyMongo</a>
<ul>
<li>
<a href="#toc_3">Installation</a>
</li>
<li>
<a href="#toc_4">Tutorial</a>
<ul>
<li>
<a href="#toc_5">Making a connection</a>
</li>
<li>
<a href="#toc_6">Database</a>
</li>
<li>
<a href="#toc_7">Collection</a>
</li>
<li>
<a href="#toc_8">Documents</a>
<ul>
<li>
<a href="#toc_9">insert</a>
</li>
<li>
<a href="#toc_10">find</a>
</li>
<li>
<a href="#toc_11">sort</a>
</li>
<li>
<a href="#toc_12">update</a>
</li>
<li>
<a href="#toc_13">remove</a>
</li>
</ul>
</li>
<li>
<a href="#toc_14">Aggregation</a>
</li>
<li>
<a href="#toc_15">Indexes</a>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<h2 id="toc_0">安装</h2>

<p>我的系统是<code>Ubuntu 14.04.4 LTS</code>.</p>

<p>安装还是按照<a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/">官方教程</a>比较好，虽然<code>ubuntu</code>的<code>apt-get</code>中有个<code>mongodb</code>，但我们用的不是这个。</p>

<p>安装过程也比较无脑，照着做就好了：</p>

<pre><code>sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
echo &quot;deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list
sudo apt-get update
sudo apt-get install -y mongodb-org
</code></pre>

<p>注意第一句是要导入一个<code>GPG Key</code>，不同版本不一样，实际装的时候去官网看一眼。</p>

<h2 id="toc_1">启动/停止服务</h2>

<p>安装好后就可以启动停止mongodb的服务了：</p>

<pre><code>sudo service mongod start
sudo service mongod stop
sudo service mongod restart
</code></pre>

<p>注意这里的<code>mongod</code>指代的是mongodb的deamon。</p>

<h2 id="toc_2">PyMongo</h2>

<p>感觉shell不是很给力，就直接看pymongo的教程吧，下面是按照<a href="https://docs.mongodb.com/getting-started/python/">官网</a>的教程，和api的<a href="http://api.mongodb.com/python/current/index.html">文档</a>整理写的一些基本函数。</p>

<p>首先导入官网给出的一个数据，我们后面的教程都会在这个数据上操作：</p>

<pre><code>wget https://raw.githubusercontent.com/mongodb/docs-assets/primer-dataset/primer-dataset.json
mongoimport --db test --collection restaurants --drop --file primer-dataset.json
</code></pre>

<p>第一行是下载文件，第二行是将数据导入到名为test的database中名为restaurants的collection中。</p>

<h3 id="toc_3">Installation</h3>

<p>安装就用<code>pip</code>：</p>

<pre><code>sudo pip install pymongo
</code></pre>

<h3 id="toc_4">Tutorial</h3>

<p>首先导入module：</p>

<pre><code>from pymongo import MongoClient
</code></pre>

<h4 id="toc_5">Making a connection</h4>

<p>利用<code>MongoClient</code>创建一个cursor，参数是可以为空的，默认会连接到<code>localhost:27017</code>，也就是说以下三句效果相同：</p>

<pre><code>client = MongoClient()
client = MongoClient(&#39;localhost&#39;, 27017)
client = MongoClient(&#39;mongodb://localhost:27017/&#39;)
</code></pre>

<h4 id="toc_6">Database</h4>

<p>创建好连接后就可以对数据库进行操作了，例如想看所有的数据库：</p>

<pre><code>client.database_names()
</code></pre>

<p>一般来说会看到一个叫<code>test</code>的数据库。</p>

<p>连接到一个数据库有两种方法，第二种方法类似dict，如果数据库名有特殊字符就只能用这种。</p>

<pre><code>db = client.test
db = client[&#39;a-database&#39;]
</code></pre>

<p>注意，MongoDB<strong>无需显式创建数据库</strong>，例如上面的代码，<code>a-database</code>如果不存在，此时会自动创建一个（其实也不是，只有真正对这个数据库进行操作后才会创建）。</p>

<p>如果要删除一个database，则需要在<code>client</code>中操作：</p>

<pre><code>db.drop_database(&#39;a_database&#39;)
</code></pre>

<p>现在我们进入<code>test</code>数据库进行后续的教程。</p>

<h4 id="toc_7">Collection</h4>

<p>因为<code>MongoDB</code>是<code>NoSQL</code>的，有一些概念与传统的RDBMS有区别，比如这个<code>collection</code>就类似于RDBMS中的关系表<code>table</code>，<code>table</code>是记录<code>row</code>的集合，而<code>collection</code>是<code>document</code>的集合。</p>

<p>和操作database很像，两种连接方式，无须显式创建。</p>

<pre><code>db.collection_names()  # 查看当前数据库下的所有collection
collection = db.restaurants
collection = db[&#39;restaurants&#39;]
</code></pre>

<p>类似的，删除<code>collection</code>要在database中进行：</p>

<pre><code>db.drop_collection(&#39;a_collection&#39;)
</code></pre>

<h4 id="toc_8">Documents</h4>

<p><code>MongoDB</code>中的数据都是以一种类似<code>JSON</code>的文档<code>document</code>存储的，类似RDBMS中的记录／行<code>row</code>，不同的是，一个collection中的documents可以有不同的域<code>field</code>，而一张表中的行必须有相同的属性／列<code>column</code>。</p>

<p>document按照类<code>JSON</code>的格式存，在<code>python</code>中就会表示为<code>dict</code>，例如下面就是一个document的内容：</p>

<pre><code>from datetime import datetime
d = {
        &quot;address&quot;: {
            &quot;street&quot;: &quot;2 Avenue&quot;,
            &quot;zipcode&quot;: &quot;10075&quot;,
            &quot;building&quot;: &quot;1480&quot;,
            &quot;coord&quot;: [-73.9557413, 40.7720266]
        },
        &quot;borough&quot;: &quot;Manhattan&quot;,
        &quot;cuisine&quot;: &quot;Italian&quot;,
        &quot;grades&quot;: [
            {
                &quot;date&quot;: datetime.strptime(&quot;2014-10-01&quot;, &quot;%Y-%m-%d&quot;),
                &quot;grade&quot;: &quot;A&quot;,
                &quot;score&quot;: 11
            },
            {
                &quot;date&quot;: datetime.strptime(&quot;2014-01-16&quot;, &quot;%Y-%m-%d&quot;),
                &quot;grade&quot;: &quot;B&quot;,
                &quot;score&quot;: 17
            }
        ],
        &quot;name&quot;: &quot;Vella&quot;,
        &quot;restaurant_id&quot;: &quot;41704620&quot;
    }
)
</code></pre>

<p>假设我们现在的collection就是一开始添加的<code>restaurants</code>，可以先看看有多少documents：</p>

<pre><code>collection.count()
</code></pre>

<h5 id="toc_9">insert</h5>

<p>现在将上面的那个document插入：</p>

<pre><code>result = collection.insert_one(d)
result.inserted_id
</code></pre>

<p>注意会返回一个<code>InsertOneResult</code>类型的数据，其有个属性<code>inserted_id</code>会给出插入的document在collection中的id号，对于一个collection中各个documents都是不同的，如果插入时没有给定，则会自动创建。</p>

<p>如果想一次插入多个，可以用<code>insert_many</code>：</p>

<pre><code>result = collection.insert_many([d1, d2, d3])
result.inserted_ids
</code></pre>

<p>类似的，会返回一个<code>InsertManyResult</code>类的数据，可以看所有documents的id。</p>

<h5 id="toc_10">find</h5>

<p>本小节会介绍两个函数<code>find</code>和<code>find_one</code>，从函数名就可以猜出，<code>find</code>会找出所有符合条件的documents，其返回的数据类型为<code>Cursor</code>，实际上就是一个<code>iterator</code>，需要迭代访问；而<code>find_one</code>只会返回第一个满足条件的document，数据类型是<code>dict</code>。</p>

<pre><code>cursor = find()  # 条件为空，也就是会返回所有的documents
for doc in cursor:  # 迭代访问
    print doc
find_one()  # 返回第一个document
</code></pre>

<p>还是拿<code>restaurants</code>做示范，如果要找<code>borough</code><strong>等于</strong><code>Manhattan</code>的，将条件按<code>dict</code>格式传进去：</p>

<pre><code>cursor = db.restaurants.find({&quot;borough&quot;: &quot;Manhattan&quot;})
</code></pre>

<p><code>dict</code>可以嵌套<code>dict</code>，同样的<code>document</code>也可以嵌套<code>document</code>，例如<code>address</code>下还有<code>street</code>、<code>zipcode</code>等，如果要找<code>zipcode</code>等于<code>10075</code>的，则要用<code>.</code>来连接：</p>

<pre><code>cursor = db.restaurants.find({&quot;address.zipcode&quot;: &quot;10075&quot;})
</code></pre>

<p>一家餐厅可能有多个用户打分，这就形成了一个documents的列表，<code>grades</code>就是这样，如果想找<code>grades</code>中是否<strong>包含</strong>一个document的<code>grade</code><strong>等于</strong><code>B</code>，则可以这样实现：</p>

<pre><code>cursor = db.restaurants.find({&quot;grades.grade&quot;: &quot;B&quot;})
</code></pre>

<p>如果涉及到操作符，如大于小于，则用下面这种格式（dict套dict）：</p>

<pre><code>{ &lt;field1&gt;: { &lt;operator1&gt;: &lt;value1&gt; } }
</code></pre>

<p>比如</p>

<pre><code>cursor = db.restaurants.find({&quot;grades.score&quot;: {&quot;$gt&quot;: 30}})
</code></pre>

<p>具体的操作符可以去看<a href="https://docs.mongodb.com/manual/reference/operator/">官方文档</a>。</p>

<p><code>AND</code>操作很简单，只要将多个条件写在dict中就好：</p>

<pre><code>cursor = db.restaurants.find({&quot;cuisine&quot;: &quot;Italian&quot;, &quot;address.zipcode&quot;: &quot;10075&quot;})
</code></pre>

<p><code>OR</code>则比较特殊，dict中用<code>$or</code>作为key，条件写在list中作value：</p>

<pre><code>cursor = db.restaurants.find(
    {&quot;$or&quot;: [{&quot;cuisine&quot;: &quot;Italian&quot;}, {&quot;address.zipcode&quot;: &quot;10075&quot;}]})
</code></pre>

<p><code>find_one</code>与上面类似，就不多说了，唯一的区别就是返回的是一个dict。</p>

<h5 id="toc_11">sort</h5>

<p>查询到多个结果后可能希望对结果排序，那么就要对<code>Cursor</code>用<code>sort</code>，比如希望先按<code>borough</code>升序，再按<code>zipcode</code>升序，可以写为：</p>

<pre><code>cursor = db.restaurants.find().sort([
    (&quot;borough&quot;, pymongo.ASCENDING),
    (&quot;address.zipcode&quot;, pymongo.ASCENDING)
])
</code></pre>

<p>如果只按照一个属性排序，则直接将属性和方向传入即可：</p>

<pre><code>cursor = db.restaurants.find().sort(&quot;borough&quot;, pymongo.ASCENDING)
</code></pre>

<p>注意，<code>sort</code>是inplace的，虽然也会返回一个<code>Cursor</code>，但假如已经查询完返回了一个<code>Cursor</code>，则下面两句代码没有区别：</p>

<pre><code>cursor = cursor.sort(&quot;borough&quot;, pymongo.ASCENDING)
cursor.sort(&quot;borough&quot;, pymongo.ASCENDING)
</code></pre>

<h5 id="toc_12">update</h5>

<p>类似的，本节也有两个函数<code>update_one</code>和<code>update_many</code>。</p>

<p>只需将查询条件和更新内容作为两个参数传入即可，例如修改<code>cuisine</code>为<code>American (New)</code>（用到<code>$set</code>），修改<code>lastModified</code>为当前时间（用到<code>$currentDate</code>）：</p>

<pre><code>result = db.restaurants.update_one(
    {&quot;name&quot;: &quot;Juni&quot;},
    {
        &quot;$set&quot;: {
            &quot;cuisine&quot;: &quot;American (New)&quot;
        },
        &quot;$currentDate&quot;: {&quot;lastModified&quot;: True}
    }
)
result.matched_count  # 查找到的数量
result.modified_count  # 实际修改的数量
</code></pre>

<p>这个部分也有好多操作符，还是推荐去扫一遍<a href="https://docs.mongodb.com/manual/reference/operator/">官方文档</a>。</p>

<p>这个是更新，如果要进行替换，可以用<code>replace_one</code>（并没有<code>replace_many</code>），第一个参数为条件，第二个参数为替换内容，替换后只有<code>_id</code>会保留。</p>

<h5 id="toc_13">remove</h5>

<p>要删除document也有两个函数，<code>delete_one</code>和<code>delete_many</code>，只需传入查询条件即可，返回的结果可以查看实际删除的数量：</p>

<pre><code>result = db.restaurants.delete_many({&quot;borough&quot;: &quot;Manhattan&quot;})
result.deleted_count
</code></pre>

<p>如果要删除所有，则可以传入条件<code>{}</code>（为什么不drop掉collection呢？）</p>

<h4 id="toc_14">Aggregation</h4>

<p>聚合这一块内容很复杂，通过<code>aggregate</code>可以实现SQL中的<code>group by</code>、<code>having</code>等功能，在3.2版本后，还可以实现<code>join</code>操作！坑比较大，等有空再单独写一章吧。</p>

<h4 id="toc_15">Indexes</h4>

<p><code>index</code>主要是用来加速特定查找的，如果没有索引，每次查找就要遍历一遍collection，效率自然不高。<code>MongoDB</code>会自动把索引建在<code>_id</code>上，通常对我们的查找没有帮助，需要我们手动选择一个field建立，当然也可以选择一组fields建立：</p>

<pre><code>db.restaurants.create_index([
    (&quot;cuisine&quot;, pymongo.ASCENDING),
    (&quot;address.zipcode&quot;, pymongo.DESCENDING)
])
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing phpMyAdmin on Ubuntu]]></title>
    <link href="http://yaozh1918.github.io/14633851869005.html"/>
    <updated>2016-05-16T15:53:06+08:00</updated>
    <id>http://yaozh1918.github.io/14633851869005.html</id>
    <content type="html"><![CDATA[
<p>This article is used to record the installation steps of phpMyAdmin.</p>

<span id="more"></span><!-- more -->

<p>These days, I have a large dataset to deal with, which contains several tables. So I want to use a database to store it. And finally I chose <code>mysql</code>, but I found it was hard to have an intuitive insight into dataset through command line. A GUI was needed. It seemed that <code>phpMyAdmin</code> could meet my need. But installing was not very easy, so I wrote this article to record the correct steps in case I forget.</p>

<p>Besides, my operating system is <code>Ubuntu 14.04.4 LTS</code>.</p>

<h2 id="toc_0">Install Apache</h2>

<p><a href="http://my.oschina.net/tinydeng/blog/338579?fromerr=6i6O5LLs">This</a> article shows a correct and convenient way.</p>

<p>First, update the package lists.</p>

<p><code>sudo apt-get update</code></p>

<p>And then, install apache. Note that the package name is <code>apache2</code>.</p>

<p><code>sudo apt-get install apache2</code></p>

<p>After installation, you can visit <code>localhost</code> to ensure installation succeeded. Henceforth, you can start the server by using <code>sudo apachectl -k start</code>, or stop it by using <code>sudo apachectl -k stop</code>.</p>

<h2 id="toc_1">Install php</h2>

<p>Well, it&#39;s quiet easy.</p>

<p><code>sudo apt-get install php5 libapache2-mod-php5</code></p>

<p>Maybe the apache server need restarted.</p>

<p><code>sudo apachectl -k restart</code></p>

<h2 id="toc_2">Install mysql</h2>

<p>In the <a href="http://my.oschina.net/tinydeng/blog/338579?fromerr=6i6O5LLs">article</a> I mentioned before, the author only installed <code>mysql-server</code>. But I installed 3 packages.</p>

<p><code>sudo apt-get install mysql-server mysql-client libmysqlclient-dev</code></p>

<p>During the installation, you will be asked to input the password of root user. If you want to use <code>phpMyAdmin</code>, you should set one, because your database can be visited through network by other users. </p>

<p>I doubt there may be some other packages needed. I&#39;m sorry I don&#39;t remember it. You can install them all, just in case. XD</p>

<p><code>sudo apt-get install php5-mysql php5-curl php5-gd</code></p>

<h2 id="toc_3">Install phpMyAdmin</h2>

<p>Finally, install <code>phpMyAdmin</code>.</p>

<p><code>sudo apt-get install phpmyadmin</code></p>

<p>During the installation, you will be asked to choose whether to use default settings or not(Of course choose yes) and a password is required.</p>

<p>Your <code>phpMyAdmin</code> will be installed automatically under <code>/usr/share/phpMyAdmin</code>, so you should make a symbolic link of this folder in <code>/var/www/html</code>.</p>

<p><code>sudo ln -s /usr/share/phpmyadmin/ /var/www/html/</code></p>

<h2 id="toc_4">An unexpected error</h2>

<p>When I logged in the phpMyAdmin, there was a warning, saying &#39;The mcrypt extension is missing. Please check your PHP configuration&#39;. There is a solution on <a href="http://stackoverflow.com/questions/22721630/the-mcrypt-extension-is-missing-please-check-your-php-configuration/">stackoverflow</a>. The top voted answer offered a 4-step solution:</p>

<pre><code>sudo apt-get install php5-mcrypt
sudo ln -s /etc/php5/conf.d/mcrypt.ini /etc/php5/mods-available
sudo php5enmod mcrypt 
sudo service apache2 restart
</code></pre>

<p>But actually, the last 2 steps are enough, at least for me.</p>

<h2 id="toc_5">Job Done!</h2>

<p>Now you can enjoy your <code>mysql</code> using GUI through <code>localhost/phpmyadmin</code>!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Pygame on Mac OS X]]></title>
    <link href="http://yaozh1918.github.io/14623285310444.html"/>
    <updated>2016-05-04T10:22:11+08:00</updated>
    <id>http://yaozh1918.github.io/14623285310444.html</id>
    <content type="html"><![CDATA[
<p>It&#39;s said that <code>pygame</code> provided on their <a href="http://www.pygame.org/download.shtml">website</a> is not compatible with Mac system python because <code>pygame</code> is built for 32 bit python while system python is 64 bit. </p>

<span id="more"></span><!-- more -->

<p>Luckily I have found a <a href="https://bitbucket.org/pygame/pygame/issues/82/homebrew-on-leopard-fails-to-install#comment-627494">solution</a> and now I post it on my blog in case I forget it.</p>

<pre><code>brew install mercurial
brew install sdl sdl_image sdl_mixer sdl_ttf smpeg portmidi 
sudo pip install hg+http://bitbucket.org/pygame/pygame
</code></pre>

<p>After installation, you can validate it via this interesting <a href="https://github.com/sourabhv/FlapPyBird">repo</a>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sort 3x3 grid by rotating 2x2 subgrids]]></title>
    <link href="http://yaozh1918.github.io/14621764503901.html"/>
    <updated>2016-05-02T16:07:30+08:00</updated>
    <id>http://yaozh1918.github.io/14621764503901.html</id>
    <content type="html"><![CDATA[
<p>Given a 3x3 grid filled with 1-9, how do you sort it to another given grid by rotating 2x2 subgrids?</p>

<p>Some discussions can be found <a href="http://stackoverflow.com/questions/23433442/sort-3x3-grid-by-rotating-2x2-subgrids">here</a>.</p>

<span id="more"></span><!-- more -->

<pre><code>import numpy as np
from Queue import Queue


class Sort_Grid:

    def __init__(self, S=123456789, T=947852361):
        self.source = S
        self.terminal = T

    def num2array(self, num):
        ret = np.zeros(9, np.uint8)
        for i in xrange(9):
            ret[i] = num / 10**(8-i)
            num -= ret[i] * 10**(8-i)
        return ret

    def array2num(self, arr):
        return np.sum(arr * 10**np.arange(8,-1,-1))

    def biBFS(self):
        self.basis = [[0,0], [0,1], [1,0], [1,1]]
        self.subbasis = [[1,3,0,2], [2,0,3,1]]
        self.lookup = [np.zeros(987654321+1, bool) for i in range(2)]
        self.queue = [Queue() for i in range(2)]
        self.lookup[0][self.source] = True
        self.lookup[1][self.terminal] = True
        level0 = 0
        level1 = 0
        c0 = self.source
        c1 = self.terminal
        if c0 == c1:
            return 0, 0, 0
        while True:
            if level0 &lt; level1:
                midstate = self.EnQueue(c0, level0, 0)
                if midstate:
                    return midstate, level0, level1
                c0, level0 = self.queue[0].get()
            else:
                midstate = self.EnQueue(c1, level1, 1)
                if midstate:
                    return midstate, level0, level1
                c1, level1 = self.queue[1].get()

    def EnQueue(self, state, level, ind):
        array = self.num2array(state)
        for i in range(4):
            shadow = array.copy()
            x, y = self.basis[i]
            base = np.array([x*3+y, x*3+y+1, (x+1)*3+y, (x+1)*3+y+1])
            for j in range(2):
                shadow[base] = array[base[self.subbasis[j]]]
                num = self.array2num(shadow)
                if ~self.lookup[ind][num]:
                    if self.lookup[1-ind][num]:
                        return num
                    self.queue[ind].put((num, level+1))
                    self.lookup[ind][num] = True

def biBFS(S, T, seqlist):
    if S == T:
        return
    mid, l0, l1 = Sort_Grid(S, T).biBFS()
    if mid==0 or mid in seqlist:
        return
    seqlist.insert(seqlist.index(S)+1, mid)
    biBFS(S, mid, seqlist)
    biBFS(mid, T, seqlist)

def main():
    S = 123456789
    T = 947852361
    seqlist = [S, T]
    biBFS(S, T, seqlist)
    return seqlist

if __name__ == &#39;__main__&#39;:
    main()

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开博客啦！]]></title>
    <link href="http://yaozh1918.github.io/14621706709086.html"/>
    <updated>2016-05-02T14:31:10+08:00</updated>
    <id>http://yaozh1918.github.io/14621706709086.html</id>
    <content type="html"><![CDATA[
<p>终于开了一个博客，感谢有<code>MWeb</code>这么好用的软件。</p>

<p>之前一直用的作业部落的<code>Cmd Markdown</code>，也很不错，也感谢一下XD。但比起<code>MWeb</code>还是逊色不少，这个可以直接生成静态页面，几步就可以挂到<code>Github Pages</code>上了，方便的很！图片、URL什么的插入都很方便。安利一波！</p>

<span id="more"></span><!-- more -->

<p>那么这个博客就主要记录一下关于Machine Learning, Data Mining的一些内容吧，可能还会有一些基本的算法、编程语言、数学的内容。</p>

<p>接下来的内容仅仅是测试一下各项功能是否正常。</p>

<ul>
<li>
<a href="#toc_0">LaTex</a>
</li>
<li>
<a href="#toc_1">Sequence and Flow Chart</a>
</li>
<li>
<a href="#toc_2">Images</a>
</li>
</ul>


<h2 id="toc_0">LaTex</h2>

<p>For example this is a Block level \[x = {-b \pm \sqrt{b^2-4ac} \over 2a}\] formula, and this is an inline Level \(x = {-b \pm \sqrt{b^2-4ac} \over 2a}\) formula.</p>

<p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =<br/>
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}<br/>
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p>

<h2 id="toc_1">Sequence and Flow Chart</h2>

<pre><code class="language-sequence">Andrew-&gt;China: Says Hello
Note right of China: China thinks about it
China--&gt;Andrew: How are you?
Andrew-&gt;&gt;China: I am good thanks!
</code></pre>

<pre><code class="language-flow">st=&gt;start: Start:&gt;http://www.google.com[blank]
e=&gt;end:&gt;http://www.google.com
op1=&gt;operation: My Operation
sub1=&gt;subroutine: My Subroutine
cond=&gt;condition: Yes
or No?:&gt;http://www.google.com
io=&gt;inputoutput: catch something...

st-&gt;op1-&gt;cond
cond(yes)-&gt;io-&gt;e
cond(no)-&gt;sub1(right)-&gt;op1
</code></pre>

<h2 id="toc_2">Images</h2>

<p>My avatar.</p>

<p><img src="http://ooo.0o0.ooo/2016/05/02/5726ffee18657.jpg" alt="icon"/></p>

<p>Resize and center.</p>

<p><img src="http://ooo.0o0.ooo/2016/05/02/5726ffee18657.jpg" alt="icon" class="mw_img_center" style="width:100px;display: block; clear:both; margin: 0 auto;"/></p>

]]></content>
  </entry>
  
</feed>
