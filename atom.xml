<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[YaoZh1918]]></title>
  <link href="http://yaozh1918.github.io/atom.xml" rel="self"/>
  <link href="http://yaozh1918.github.io/"/>
  <updated>2016-05-05T09:09:20+08:00</updated>
  <id>http://yaozh1918.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[Installing Pygame on Mac OS X]]></title>
    <link href="http://yaozh1918.github.io/14623285310444.html"/>
    <updated>2016-05-04T10:22:11+08:00</updated>
    <id>http://yaozh1918.github.io/14623285310444.html</id>
    <content type="html"><![CDATA[
<p>It&#39;s said that <code>pygame</code> provided on their <a href="http://www.pygame.org/download.shtml">website</a> is not compatible with Mac system python because <code>pygame</code> is built for 32 bit python while system python is 64 bit. </p>

<span id="more"></span><!-- more -->

<p>Luckily I have found a <a href="https://bitbucket.org/pygame/pygame/issues/82/homebrew-on-leopard-fails-to-install#comment-627494">solution</a> and now I post it on my blog in case I forget it.</p>

<pre><code>brew install mercurial
brew install sdl sdl_image sdl_mixer sdl_ttf smpeg portmidi 
sudo pip install hg+http://bitbucket.org/pygame/pygame
</code></pre>

<p>After installation, you can validate it via this interesting <a href="https://github.com/sourabhv/FlapPyBird">repo</a>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sort 3x3 grid by rotating 2x2 subgrids]]></title>
    <link href="http://yaozh1918.github.io/14621764503901.html"/>
    <updated>2016-05-02T16:07:30+08:00</updated>
    <id>http://yaozh1918.github.io/14621764503901.html</id>
    <content type="html"><![CDATA[
<p>Given a 3x3 grid filled with 1-9, how do you sort it to another given grid by rotating 2x2 subgrids?</p>

<p>Some discussions can be found <a href="http://stackoverflow.com/questions/23433442/sort-3x3-grid-by-rotating-2x2-subgrids">here</a>.</p>

<span id="more"></span><!-- more -->

<pre><code>import numpy as np
from Queue import Queue


class Sort_Grid:

    def __init__(self, S=123456789, T=947852361):
        self.source = S
        self.terminal = T

    def num2array(self, num):
        ret = np.zeros(9, np.uint8)
        for i in xrange(9):
            ret[i] = num / 10**(8-i)
            num -= ret[i] * 10**(8-i)
        return ret

    def array2num(self, arr):
        return np.sum(arr * 10**np.arange(8,-1,-1))

    def biBFS(self):
        self.basis = [[0,0], [0,1], [1,0], [1,1]]
        self.subbasis = [[1,3,0,2], [2,0,3,1]]
        self.lookup = [np.zeros(987654321+1, bool) for i in range(2)]
        self.queue = [Queue() for i in range(2)]
        self.lookup[0][self.source] = True
        self.lookup[1][self.terminal] = True
        level0 = 0
        level1 = 0
        c0 = self.source
        c1 = self.terminal
        if c0 == c1:
            return 0, 0, 0
        while True:
            if level0 &lt; level1:
                midstate = self.EnQueue(c0, level0, 0)
                if midstate:
                    return midstate, level0, level1
                c0, level0 = self.queue[0].get()
            else:
                midstate = self.EnQueue(c1, level1, 1)
                if midstate:
                    return midstate, level0, level1
                c1, level1 = self.queue[1].get()

    def EnQueue(self, state, level, ind):
        array = self.num2array(state)
        for i in range(4):
            shadow = array.copy()
            x, y = self.basis[i]
            base = np.array([x*3+y, x*3+y+1, (x+1)*3+y, (x+1)*3+y+1])
            for j in range(2):
                shadow[base] = array[base[self.subbasis[j]]]
                num = self.array2num(shadow)
                if ~self.lookup[ind][num]:
                    if self.lookup[1-ind][num]:
                        return num
                    self.queue[ind].put((num, level+1))
                    self.lookup[ind][num] = True

def biBFS(S, T, seqlist):
    if S == T:
        return
    mid, l0, l1 = Sort_Grid(S, T).biBFS()
    if mid==0 or mid in seqlist:
        return
    seqlist.insert(seqlist.index(S)+1, mid)
    biBFS(S, mid, seqlist)
    biBFS(mid, T, seqlist)

def main():
    S = 123456789
    T = 947852361
    seqlist = [S, T]
    biBFS(S, T, seqlist)
    return seqlist

if __name__ == &#39;__main__&#39;:
    main()

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开博客啦！]]></title>
    <link href="http://yaozh1918.github.io/14621706709086.html"/>
    <updated>2016-05-02T14:31:10+08:00</updated>
    <id>http://yaozh1918.github.io/14621706709086.html</id>
    <content type="html"><![CDATA[
<p>终于开了一个博客，感谢有<code>MWeb</code>这么好用的软件。
之前一直用的作业部落的<code>Cmd Markdown</code>，也很不错，也感谢一下XD。但比起<code>MWeb</code>还是逊色不少，这个可以直接生成静态页面，几步就可以挂到<code>Github Pages</code>上了，方便的很！图片、URL什么的插入都很方便。安利一波！</p>

<span id="more"></span><!-- more -->

<p>那么这个博客就主要记录一下关于Machine Learning, Data Mining的一些内容吧，可能还会有一些基本的算法、编程语言、数学的内容。</p>

<p>接下来的内容仅仅是测试一下各项功能是否正常。</p>

<ul>
<li>
<a href="#toc_0">LaTex</a>
</li>
<li>
<a href="#toc_1">Sequence and Flow Chart</a>
</li>
<li>
<a href="#toc_2">Images</a>
</li>
</ul>


<h2 id="toc_0">LaTex</h2>

<p>For example this is a Block level \[x = {-b \pm \sqrt{b^2-4ac} \over 2a}\] formula, and this is an inline Level \(x = {-b \pm \sqrt{b^2-4ac} \over 2a}\) formula.</p>

<p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p>

<h2 id="toc_1">Sequence and Flow Chart</h2>

<pre><code class="language-sequence">Andrew-&gt;China: Says Hello
Note right of China: China thinks about it
China--&gt;Andrew: How are you?
Andrew-&gt;&gt;China: I am good thanks!
</code></pre>

<pre><code class="language-flow">st=&gt;start: Start:&gt;http://www.google.com[blank]
e=&gt;end:&gt;http://www.google.com
op1=&gt;operation: My Operation
sub1=&gt;subroutine: My Subroutine
cond=&gt;condition: Yes
or No?:&gt;http://www.google.com
io=&gt;inputoutput: catch something...

st-&gt;op1-&gt;cond
cond(yes)-&gt;io-&gt;e
cond(no)-&gt;sub1(right)-&gt;op1
</code></pre>

<h2 id="toc_2">Images</h2>

<p>My avatar.</p>

<p><img src="http://ooo.0o0.ooo/2016/05/02/5726ffee18657.jpg" alt="icon"/></p>

<p>Resize and center.</p>

<p><img src="http://ooo.0o0.ooo/2016/05/02/5726ffee18657.jpg" alt="icon" class="mw_img_center" style="width:100px;display: block; clear:both; margin: 0 auto;"/></p>

]]></content>
  </entry>
  
</feed>
